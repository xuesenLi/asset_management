<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.asset.dao.AssetDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.asset.entity.AssetEntity" id="assetMap">
        <result property="id" column="id"/>
        <result property="assetCode" column="asset_code"/>
        <result property="assetName" column="asset_name"/>
        <result property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name"/>
        <result property="orgId" column="org_id"/>
        <result property="orgName" column="org_name"/>
        <result property="useOrgId" column="use_org_id"/>
        <result property="useOrgName" column="use_org_name"/>
        <result property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="adminUserid" column="admin_userid"/>
        <result property="adminUsername" column="admin_username"/>
        <result property="areaId" column="area_id"/>
        <result property="areaName" column="area_name"/>
        <result property="storagePosition" column="storage_position"/>
        <result property="standard" column="standard"/>
        <result property="unit" column="unit"/>
        <result property="worth" column="worth"/>
        <result property="timeLimit" column="time_limit"/>
        <result property="buyTime" column="buy_time"/>
        <result property="supplier" column="supplier"/>
        <result property="remarks" column="remarks"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="assetStatus" column="asset_status"/>
        <result property="assetPreStatus" column="asset_pre_status" />
    </resultMap>

    <update id="batchUpdateByIds" parameterType="list">
        update asset
        <set>
            <if test="status != null">
                asset_status = #{status},
            </if>
            <if test="status == 0">
                use_org_id = null,
                use_org_name = null,
                emp_id = null,
                emp_name = null,
            </if>
        </set>

        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchUpdateByIds1">
        update asset
        <set>
            <if test="assetUsedVo != null">
                asset_status = #{assetUsedVo.assetStatus},
                use_org_id = #{assetUsedVo.useOrgId},
                use_org_name = #{assetUsedVo.useOrgName},
                emp_id = #{assetUsedVo.empId},
                emp_name = #{assetUsedVo.empName},
            </if>
        </set>

        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchAssetStatusAdd10" parameterType="list">
        update asset
        set asset_status = asset_status + 10
        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchAssetStatusReduce10" parameterType="list">
        update asset
        set asset_status = asset_status - 10
        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchAssetStatusAndPreStatus" parameterType="list">
        update asset
        set asset_pre_status = asset_status,
        asset_status = #{status}
        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchAssetStatusByPreStatus" parameterType="list">
        update asset
        set asset_status = asset_pre_status
        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="updateAssetStatusByPreStatus" parameterType="java.lang.Integer">
        update asset
        set asset_status = asset_pre_status
        where id = #{id}
    </update>

    <select id="batchFindAssetUseInfo" parameterType="list" resultType="io.renren.modules.asset.vo.AssetUseInfoVo">
        select id, asset_name, category_name, org_name, emp_name, use_org_name, area_name
        from asset
        <where>
            id in
            <foreach collection="assets" item="item" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>

    </select>


    <update id="batchUpdateAssetInfoById">
        update asset
        <set>
            <if test="assetEntity.assetName != null">
                asset_name = #{assetEntity.assetName},
            </if>
            <if test="assetEntity.categoryName != null">
                category_id = #{assetEntity.categoryId},
                category_name = #{assetEntity.categoryName},
            </if>
            <if test="assetEntity.orgName != null">
                org_id = #{assetEntity.orgId},
                org_name = #{assetEntity.orgName},
            </if>
            <if test="assetEntity.useOrgName != null">
                use_org_id = #{assetEntity.useOrgId},
                use_org_name = #{assetEntity.useOrgName},
            </if>
            <if test="assetEntity.empName != null">
                emp_id = #{assetEntity.empId},
                emp_name = #{assetEntity.empName},
            </if>
            <if test="assetEntity.areaName != null">
                area_id = #{assetEntity.areaId},
                area_name = #{assetEntity.areaName},
            </if>
        </set>

        <where>
            id in
            <if test="assetIds != null">
                <foreach collection="assetIds" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <update id="batchAssetStatusByUseCase" parameterType="list">
        update asset
        set asset_status = case when asset_pre_status = 0  then 1 else asset_pre_status end
        <where>
            id in
            <if test="assets != null">
                <foreach collection="assets" item="item" separator="," index="index" open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </update>

    <insert id="batchInsertAsset" parameterType="list" useGeneratedKeys="true" keyProperty="id">

        insert into asset (asset_code, asset_name,
        category_id, category_name, org_id, org_name,
        use_org_id, use_org_name, emp_id, emp_name,
        admin_userid, admin_username, area_id, area_name,
        storage_position, standard, unit, worth,
        time_limit, buy_time, supplier, remarks,
        asset_status
        )
        values
        <foreach collection="assets" item="item" index="index" separator=",">
            (
            #{item.assetCode},#{item.assetName},
            #{item.categoryId},#{item.categoryName},
            #{item.orgId},#{item.orgName},
            #{item.useOrgId},#{item.useOrgName},
            #{item.empId},#{item.empName},
            #{item.adminUserid},#{item.adminUsername},
            #{item.areaId},#{item.areaName},
            #{item.storagePosition},#{item.standard},
            #{item.unit},#{item.worth},
            #{item.timeLimit},#{item.buyTime},
            #{item.supplier},#{item.remarks},
            #{item.assetStatus}
            )
        </foreach>

    </insert>

    <update id="updateByOtherInfo" parameterType="io.renren.modules.asset.entity.AssetEntity">
        update asset
        <set>
            <if test="storagePosition != null">
                storage_position = #{storagePosition,jdbcType=VARCHAR},
            </if>
            <if test="standard != null">
                standard = #{standard,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="worth != null">
                worth = #{worth,jdbcType=DECIMAL},
            </if>
            <if test="timeLimit != null">
                time_limit = #{timeLimit,jdbcType=INTEGER},
            </if>
            <if test="buyTime != null">
                buy_time = #{buyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="supplier != null">
                supplier = #{supplier,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}

    </update>


</mapper>
